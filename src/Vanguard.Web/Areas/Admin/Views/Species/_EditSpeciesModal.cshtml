@model Vanguard.Web.Models.Species

<form id="editSpeciesForm" action="/admin/species/editspecies" method="post" class="text-dark bg-light">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Id" />

    <div class="modal-header">
        <h5 class="modal-title">Edit Species</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>

    <div class="modal-body">
        <div class="mb-3">
            <label asp-for="Name" class="form-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Description" class="form-label"></label>
            <textarea asp-for="Description" class="form-control"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Universe" class="form-label"></label>
            <select asp-for="UniverseId" class="form-select" asp-items="@(new SelectList(ViewBag.Universes, "Id", "Name"))">
                <option value="">-- Select Universe --</option>
            </select>
            <span asp-validation-for="UniverseId" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Faction" class="form-label"></label>
            <select asp-for="FactionId" class="form-select" id="FactionId" data-selected-id="@Model.FactionId">
                <option value="">-- Select Faction --</option>
            </select>
        </div>

        <div class="mb-3">
            <label asp-for="CanonicalSpecies" class="form-label">Base Species</label>
            <select asp-for="CanonicalSpeciesId" class="form-select" asp-items="@(new SelectList(ViewBag.CanonicalSpecies, "Id", "Name"))">
                <option value="">-- Select Canonical Species --</option>
            </select>
            <span asp-validation-for="CanonicalSpeciesId" class="text-danger"></span>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Save changes</button>
    </div>
</form>

<script>
    // Populate Faction dropdown based on selected Universe
        (function () {
        const universeDropdown = document.getElementById("UniverseId");
        const factionDropdown = document.getElementById("FactionId");

        if (!universeDropdown || !factionDropdown) return;

        // Prevent double binding
        if (universeDropdown.dataset.listenerAttached === "true") return;

        universeDropdown.addEventListener("change", function () {
            const universeId = this.value;
            factionDropdown.innerHTML = '<option value="">-- Select Faction --</option>';

            if (!universeId) return;

            fetch(`/admin/species/getfactions/${universeId}`)
                .then(response => response.json())
                .then(data => {
                    data.forEach(faction => {
                        const option = document.createElement("option");
                        option.value = faction.id;
                        option.text = faction.name;
                        factionDropdown.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error loading factions:', error);
                });
        });

        universeDropdown.dataset.listenerAttached = "true";

    // Auto-populate factions if a universe is already selected
    const initialUniverseId = universeDropdown.value;
    const initialFactionId = factionDropdown.getAttribute("data-selected-id");

    if (initialUniverseId && initialFactionId) {
        fetch(`/admin/species/getfactions/${initialUniverseId}`)
            .then(response => response.json())
            .then(data => {
                data.forEach(faction => {
                    const option = document.createElement("option");
                    option.value = faction.id;
                    option.text = faction.name;
                    if (faction.id == initialFactionId) {
                        option.selected = true;
                    }
                    factionDropdown.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error loading initial faction list:', error);
            });
    }

        // Tooltip initialisation
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    })();
</script>