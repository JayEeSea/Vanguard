@model List<Vanguard.Web.Models.Gender>

@{
    ViewData["Title"] = "Manage Genders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-4">@ViewData["Title"]</h2>

<table class="table table-dark table-hover table-striped align-middle">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var gender in Model)
        {
            <tr class="@(gender.IsActive ? "" : "fst-italic text-muted")">
                <td>@gender.Name</td>
                <td>@gender.Description</td>
                <td>
                    <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#editModal"
                        data-id="@gender.Id">
                        Edit
                    </button>

                    @if (gender.IsActive)
                    {
                        <button class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#disableModal"
                            data-id="@gender.Id">
                            Disable
                        </button>
                    }
                    else
                    {
                        <form asp-action="ReenableGender" asp-controller="Genders" asp-area="Admin" method="post"
                            class="reenable-gender-form d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@gender.Id" />
                            <button type="submit" class="btn btn-sm btn-success">Enable</button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Buttons -->
<div class="admin-button-group">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <a href="#" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createModal">
            Add New Gender
        </a>

        <a asp-area="" asp-controller="Admin" asp-action="Index" class="btn btn-outline-secondary">
            ‚Üê Back to Admin Dashboard
        </a>
    </div>
</div>

<!-- MODALS  -->
<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="editGenderModalPlaceholder">
                <!-- Modal body content will be injected here -->
            </div>
        </div>
    </div>
</div>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="createGenderModalPlaceholder">
            <!-- Content loaded via AJAX -->
        </div>
    </div>
</div>

<!-- Disable Modal -->
<div class="modal fade" id="disableModal" tabindex="-1" aria-labelledby="disableModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="disableGenderModalPlaceholder">
            <!-- Loaded via AJAX -->
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(document).ready(function () {
            // Load Edit Modal
            $('[data-bs-toggle="modal"][data-bs-target="#editModal"]').on('click', function () {
                const genderId = $(this).data('id');

                $('#editGenderModalPlaceholder').load(`/admin/genders/editgender/${genderId}`, function () {
                    const modalEl = document.getElementById('editModal');
                    const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
                    modal.show();
                });
            });

            // Load Create Modal
            $('[data-bs-toggle="modal"][data-bs-target="#createModal"]').on('click', function () {
                $('#createGenderModalPlaceholder').load('/admin/genders/creategender', function () {
                    const modalEl = document.getElementById('createModal');
                    const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
                    modal.show();
                });
            });

            // Clean up Edit Modal
            const editModalEl = document.getElementById('editModal');
            editModalEl.addEventListener('hidden.bs.modal', function () {
                $('#editGenderModalPlaceholder').html('');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
            });

            // Clean up Create Modal
            const createModalEl = document.getElementById('createModal');
            createModalEl.addEventListener('hidden.bs.modal', function () {
                $('#createGenderModalPlaceholder').html('');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
            });
        });

        // AJAX Submit: Edit Gender
        $(document).on('submit', '#editGenderForm', function (e) {
            e.preventDefault();
            const form = $(this);

            $.ajax({
                url: form.attr('action'),
                method: form.attr('method'),
                data: form.serialize(),
                success: function () {
                    console.log("‚úÖ Edit form submission succeeded.");
                    const modalEl = document.getElementById('editModal');
                    const modal = bootstrap.Modal.getInstance(modalEl);
                    if (modal) {
                        modal.hide();
                        console.log("‚úÖ Edit modal closed.");
                    }
                    location.reload(); // reload to show updated values
                },
                error: function (xhr) {
                    console.error("‚ùå Edit form submission failed:");
                    console.error(xhr.status, xhr.statusText);
                    console.error(xhr.responseText);
                    $('#editGenderModalPlaceholder').html(xhr.responseText);
                }
            });
        });

        // AJAX Submit: Create Gender
        $(document).on('submit', '#createGenderForm', function (e) {
            e.preventDefault();
            const form = $(this);

            $.ajax({
                url: form.attr('action'),
                method: form.attr('method'),
                data: form.serialize(),
                success: function () {
                    console.log("‚úÖ Create form submission succeeded.");
                    const modalEl = document.getElementById('createModal');
                    const modal = bootstrap.Modal.getInstance(modalEl);
                    if (modal) {
                        modal.hide();
                        console.log("‚úÖ Create modal closed.");
                    }
                    location.reload(); // reload to show the new entry
                },
                error: function (xhr) {
                    console.error("‚ùå Create form submission failed:");
                    console.error(xhr.status, xhr.statusText);
                    console.error(xhr.responseText);
                    $('#createGenderModalPlaceholder').html(xhr.responseText);
                }
            });
        });

        // Load Disable Modal
        $('[data-bs-toggle="modal"][data-bs-target="#disableModal"]').on('click', function () {
            const genderId = $(this).data('id');

            $('#disableGenderModalPlaceholder').load(`/admin/genders/disablegender/${genderId}`, function () {
                const modalEl = document.getElementById('disableModal');
                const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
                modal.show();
            });
        });

        // Cleanup Disable Modal
        const disableModalEl = document.getElementById('disableModal');
        disableModalEl.addEventListener('hidden.bs.modal', function () {
            $('#disableGenderModalPlaceholder').html('');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        });

        // AJAX Submit: Soft Disable Gender
        $(document).on('submit', '.disable-gender-form', function (e) {
            e.preventDefault();
            const form = $(this);

            $.ajax({
                url: form.attr('action'),
                method: form.attr('method'),
                data: form.serialize(),
                success: function () {
                    console.log("üóëÔ∏è Gender disabled.");
                    location.reload(); // refresh to hide the disabled row
                },
                error: function (xhr) {
                    console.error("‚ùå Disable failed:");
                    console.error(xhr.status, xhr.statusText);
                    console.error(xhr.responseText);
                }
            });
        });

        // AJAX Handler for Reenable
        $(document).on('submit', '.reenable-gender-form', function (e) {
            e.preventDefault();
            const form = $(this);

            $.ajax({
                url: form.attr('action'),
                method: form.attr('method'),
                data: form.serialize(),
                success: function () {
                    console.log("‚úÖ Gender reenabled.");
                    location.reload();
                },
                error: function (xhr) {
                    console.error("‚ùå Reenable failed:");
                    console.error(xhr.status, xhr.statusText);
                    console.error(xhr.responseText);
                }
            });

            return false;
        });
    </script>
}